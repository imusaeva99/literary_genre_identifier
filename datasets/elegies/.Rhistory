labs(y = "Вероятность появления темы") +
scale_fill_brewer(palette="Paired") +
theme_gray(base_size = 20)
bgamma_core %>%
ggplot(#data = subset(test, !is.na(pyatiletka)),
aes(x = period, y = aggr)) +
geom_col(aes(fill = factor(topic))) +
labs(y = "Вероятность появления темы") +
#scale_fill_brewer(palette="Paired") +
theme_gray(base_size = 20)
bgamma_core %>%
ggplot(#data = subset(test, !is.na(pyatiletka)),
aes(x = period, y = aggr)) +
geom_col(aes(fill = factor(topic))) +
labs(y = "Вероятность появления темы") +
scale_fill_brewer(palette="Paired") +
theme_gray(base_size = 20)
bgamma_core %>%
ggplot(#data = subset(test, !is.na(pyatiletka)),
aes(x = period, y = aggr)) +
geom_col(aes(fill = factor(topic))) +
labs(y = "Вероятность появления темы") +
#scale_fill_brewer(palette="Paired") +
theme_gray(base_size = 20)
display.brewer.all()
bgamma_core %>%
ggplot(#data = subset(test, !is.na(pyatiletka)),
aes(x = period, y = aggr)) +
geom_col(aes(fill = factor(topic))) +
labs(y = "Вероятность появления темы") +
scale_fill_brewer(palette="Set3") +
theme_gray(base_size = 20)
bgamma_core %>%
ggplot(#data = subset(test, !is.na(pyatiletka)),
aes(x = period, y = aggr)) +
geom_col(aes(fill = factor(topic))) +
labs(y = "Вероятность появления темы") +
scale_fill_brewer(palette="Greens") +
theme_gray(base_size = 20)
aes(x = period, y = aggr)) +
geom_col(aes(fill = factor(topic))) +
labs(y = "Вероятность появления темы") +
scale_fill_viridis_c() +
theme_gray(base_size = 20)
aes(x = period, y = aggr)) +
geom_col(aes(fill = factor(topic))) +
labs(y = "Вероятность появления темы") +
scale_fill_viridis() +
theme_gray(base_size = 20)
bgamma_core %>%
ggplot(#data = subset(test, !is.na(pyatiletka)),
aes(x = period, y = aggr)) +
geom_col(aes(fill = factor(topic))) +
labs(y = "Вероятность появления темы") +
scale_fill_viridis(option = "magma") +
theme_gray(base_size = 20)
install.packages("viridis")
library(viridis)
bgamma_core %>%
ggplot(#data = subset(test, !is.na(pyatiletka)),
aes(x = period, y = aggr)) +
geom_col(aes(fill = factor(topic))) +
labs(y = "Вероятность появления темы") +
scale_fill_viridis(option = "magma") +
theme_gray(base_size = 20)
gamma %>%
separate(document, c("id", "year", "Meter", "Verse", "canon_ou_non", "corpus_type"), sep = "_", convert = TRUE) %>%
mutate(Meter = str_replace_all(Meter, "Дк", "Д")) %>%
group_by(topic, Meter) %>%
summarize(aggr = mean(gamma)) %>%
ungroup() -> gamma_meter
gamma_meter %>%
ggplot(aes(x = as.factor(topic), y = aggr, group = Meter, color = Meter)) + geom_line() + facet_wrap(~Meter) + geom_text(aes(label=as.factor(topic)))
bgamma %>%
separate(document, c("id", "year", "Meter", "Verse", "canon_ou_non", "corpus_type"), sep = "_", convert = TRUE) %>%
mutate(Meter = str_replace_all(Meter, "Дк", "Д")) %>%
group_by(topic, Meter) %>%
summarize(aggr = mean(gamma)) %>%
ungroup() -> bgamma_meter
big_gamma %>%
separate(document, c("id", "year", "Meter", "Verse", "canon_ou_non", "corpus_type"), sep = "_", convert = TRUE) %>%
mutate(Meter = str_replace_all(Meter, "Дк", "Д")) %>%
group_by(topic, Meter) %>%
summarize(aggr = mean(gamma)) %>%
ungroup() -> bgamma_meter
bgamma_meter %>%
ggplot(aes(x = as.factor(topic), y = aggr, group = Meter, color = Meter)) + geom_line() + facet_wrap(~Meter) + geom_text(aes(label=as.factor(topic)))
write.csv(big_beta, "beta_15t.csv")
write.csv(big_gamma, "gamma_15t.csv")
mod_12 <- LDA(dtm, k = 12, method = "Gibbs",
control = list(alpha = 0.5, delta = 0.1,
iter = 2000, seed = 1234, thin = 1))
beta12 <- tidy(mod_12, matrix = "beta")
write.csv(beta12, "beta_12t.csv")
beta12 %>%
group_by(topic) %>%
top_n(20, beta) %>%
ungroup() %>%
arrange(topic, desc(beta)) %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, scales = "free") +
coord_flip() +
scale_fill_brewer(palette="Paired") +
theme_gray(base_size = 20)
mod_8 <- LDA(dtm, k = 8, method = "Gibbs",
control = list(alpha = 0.5, delta = 0.1,
iter = 2000, seed = 1234, thin = 1))
beta8 <- tidy(mod_8, matrix = "beta")
beta8 %>%
group_by(topic) %>%
top_n(20, beta) %>%
ungroup() %>%
arrange(topic, desc(beta)) %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, scales = "free") +
coord_flip() +
scale_fill_brewer(palette="Paired") +
theme_gray(base_size = 20)
mod_11 <- LDA(dtm, k = 8, method = "Gibbs",
control = list(alpha = 0.5, delta = 0.1,
iter = 2000, seed = 1234, thin = 1))
beta11 <- tidy(mod_11, matrix = "beta")
beta11 %>%
group_by(topic) %>%
top_n(20, beta) %>%
ungroup() %>%
arrange(topic, desc(beta)) %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, scales = "free") +
coord_flip() +
scale_fill_brewer(palette="Paired") +
theme_gray(base_size = 20)
m
mod_11 <- LDA(dtm, k = 11, method = "Gibbs",
control = list(alpha = 0.5, delta = 0.1,
iter = 2000, seed = 1234, thin = 1))
beta11 <- tidy(mod_11, matrix = "beta")
beta11 %>%
group_by(topic) %>%
top_n(20, beta) %>%
ungroup() %>%
arrange(topic, desc(beta)) %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, scales = "free") +
coord_flip() +
scale_fill_brewer(palette="Paired") +
theme_gray(base_size = 20)
str(model)
glimpse(gamma)
unique(gamma$topic)
gamma %>%
separate(document, c("id", "year", "Meter", "Verse", "canon_ou_non", "corpus_type"), sep = "_", convert = TRUE) %>%
filter(corpus_type == "core") %>%
mutate(Meter = str_replace_all(Meter, "Дк", "Д")) %>%
group_by(topic, Meter) %>%
summarize(aggr = mean(gamma)) %>%
ungroup() -> gamma_meter
gamma_meter %>%
ggplot(aes(x = as.factor(topic), y = aggr, group = Meter, color = Meter)) + geom_line() + facet_wrap(~Meter) + geom_text(aes(label=as.factor(topic)))
gamma %>%
separate(document, c("id", "year", "Meter", "Verse", "canon_ou_non", "corpus_type"), sep = "_", convert = TRUE) %>%
filter(corpus_type == "core") %>%
group_by(topic, Verse) %>%
summarize(aggr = mean(gamma)) %>%
ungroup() -> gamma_razmer
gamma_razmer %>%
ggplot(aes(x = as.factor(topic), y = aggr, group = Verse, color = Verse)) + geom_line() + facet_wrap(~Verse) + geom_text(aes(label=as.factor(topic)))
gamma %>%
separate(document, c("id", "year", "Meter", "Verse", "canon_ou_non", "corpus_type"), sep = "_", convert = TRUE) %>%
filter(corpus_type == "core") %>%
mutate(Meter = str_replace_all(Meter, "Дк", "Д")) %>%
group_by(topic, Verse) %>%
summarize(aggr = mean(gamma)) %>%
ungroup() -> gamma_razmer
gamma_razmer %>%
ggplot(aes(x = as.factor(topic), y = aggr, group = Verse, color = Verse)) + geom_line() + facet_wrap(~Verse) + geom_text(aes(label=as.factor(topic)))
View(elegies)
gamma %>%
separate(document, c("id", "year", "Meter", "Verse", "canon_ou_non", "corpus_type"), sep = "_", convert = TRUE) %>%
filter(corpus_type == "core") %>%
mutate(Verse = str_replace_all(Verse, "Дк", "Д")) %>%
group_by(topic, Verse) %>%
summarize(aggr = mean(gamma)) %>%
ungroup() -> gamma_razmer
gamma_razmer %>%
ggplot(aes(x = as.factor(topic), y = aggr, group = Verse, color = Verse)) + geom_line() + facet_wrap(~Verse) + geom_text(aes(label=as.factor(topic)))
glimpse(elegies)
elegies %>%
group_by(year, Meter) %>%
count(Meter)
elegies %>%
group_by(Year, Meter) %>%
count(Meter)
glimpse(elegies_core)
elegies_core %>%
group_by(Year, Meter) %>%
count(Meter)
elegies_core %>%
group_by(Year, Meter) %>%
count(Meter) -> meters-years
elegies_core %>%
group_by(Year, Meter) %>%
count(Meter) -> meters_years
View(meters_years)
elegies_core %>%
group_by(Year, Verse) %>%
count(Verse) -> verse_years
View(meters_years)
View(verse_years)
elegies_core %>%
group_by(Year, Verse)
elegies_core %>%
mutate(period = floor(year/10)*10) %>%
group_by(period, Verse) %>%
count(Verse)
elegies_core %>%
mutate(period = floor(Year/10)*10) %>%
group_by(period, Verse) %>%
count(Verse)
elegies_core %>%
mutate(period = floor(Year/10)*10) %>%
group_by(period, Verse) %>%
count(Verse) -> verse_years
View(verse_years)
elegies_core %>%
mutate(period = floor(Year/5)*5) %>%
group_by(period, Verse) %>%
count(Verse) -> verse_years5
View(verse_years5)
glimpse(elegies_core)
#################
glimpse(elegies)
elegies %>%
filter(corpus == "core") %>%
select(id, Year, text_lem) -> all_you_need
View(all_you_need)
colnames(all_you_need) <- c("title", "year", "text")
per1 <- as.character(1817:1822)
per2 <- as.character(1823:1828)
per3 <- as.character(1829:1835)
s17_22 <- all_you_need %>%
filter(year %in% per1)
s17_22 %>%
mutate(autor = "1817_1822") -> s17_22
#
s23_28 <- all_you_need %>%
filter(year %in% per2)
s23_28 %>%
mutate(autor = "1823_1828") -> s23_28
#
s29_35 <- all_you_need %>%
filter(year %in% per3)
s29_35 %>%
mutate(autor = "1829_1835") -> s29_35
test <- rbind(s17_22, s23_28)
corpus <- rbind(test, s29_35)
glimpse(corpus)
write.csv(corpus, "corp_for_logodds.csv")
install.packages("magrittr")
install.packages("magrittr")
library(magrittr)
tf_idf_t %<>%
count(bigram)
tf_idf <- corpus %>%
unnest_tokens(bigram, text, token="ngrams", n=2, to_lower=T) %>%
count(autor, bigram) %>%
bind_tf_idf(bigram, autor, n) %>%
arrange(desc(tf_idf))
glimpse(tf_idf)
bi_freqs_all = tf_idf %>%
group_by(bigram) %>%
summarise(totals =  sum(n))
bi_freqs_all
tf_idf_w <- corpus %>%
unnest_tokens(bigram, text, token="ngrams", n=1, to_lower=T) %>%
count(autor, bigram) %>%
bind_tf_idf(bigram, autor, n) %>%
arrange(desc(tf_idf))
glimpse(tf_idf_w)
bi_freqs_all_w = tf_idf_w %>%
group_by(bigram) %>%
summarise(totals =  sum(n))
bi_freqs_author_w = tf_idf_w %>%
group_by(autor) %>%
summarise(total_author = sum(n))
freqs_all_w = tf_idf_w %>%
inner_join(bi_freqs_all_w, by="bigram") %>%
inner_join(bi_freqs_author_w, by="autor") %>%
# freqs of bigram used by "others", total sum of bigrams
mutate(notthem = totals - n, sum = sum(n)) %>%
# total freqs of all bigrams in "other" authors
mutate(notthem_a = sum - total_author) %>%
mutate(l1them = (n + totals)/((sum + total_author) - (n + totals)), #probs of "success", bigram used by author (?)
l2notthem = (notthem+totals)/((sum+notthem_a)-(notthem+totals)), #probs of "failure", bigram used by others (?)
sigmasqrd = 1/(n+totals)+1/(notthem+totals)) %>% # squared sigma (?? is this the prior adjusting ??)
mutate(sqrt = sqrt(sigmasqrd)) %>% # just sigma lol
mutate(logodds = (log(l1them)-log(l2notthem))/sqrt) # weigthed log odds
glimpse(freqs_all_w)
freqs_all_w %>%
arrange(desc(logodds)) %>%
filter(autor == "1829_1835") %>%
select(bigram, logodds) %>%
head(n = 20)
freqs_all_w %>%
arrange(desc(logodds)) %>%
filter(autor == "1817_1822") %>%
select(bigram, logodds) %>%
head(n = 20)
per1 <- as.character(1815:1822)
s15_22 %>%
mutate(autor = "1815_1822") -> s15_22
s15_22 <- all_you_need %>%
filter(year %in% per1)
s15_22 %>%
mutate(autor = "1815_1822") -> s15_22
#
s23_28 <- all_you_need %>%
filter(year %in% per2)
s23_28 %>%
mutate(autor = "1823_1828") -> s23_28
freqs_all_w %>%
arrange(desc(logodds)) %>%
filter(autor == "1815_1822") %>%
select(bigram, logodds) %>%
head(n = 20)
#
s23_28 <- all_you_need %>%
filter(year %in% per2)
s23_28 %>%
mutate(autor = "1823_1828") -> s23_28
#
s29_35 <- all_you_need %>%
filter(year %in% per3)
s29_35 %>%
mutate(autor = "1829_1835") -> s29_35
test <- rbind(s15_22, s23_28)
corpus <- rbind(test, s29_35)
glimpse(corpus)
write.csv(corpus, "corp_for_logodds.csv")
########## Unigrams
tf_idf_w <- corpus %>%
unnest_tokens(bigram, text, token="ngrams", n=1, to_lower=T) %>%
count(autor, bigram) %>%
bind_tf_idf(bigram, autor, n) %>%
arrange(desc(tf_idf))
glimpse(tf_idf_w)
bi_freqs_all_w = tf_idf_w %>%
group_by(bigram) %>%
summarise(totals =  sum(n))
bi_freqs_author_w = tf_idf_w %>%
group_by(autor) %>%
summarise(total_author = sum(n))
freqs_all_w = tf_idf_w %>%
inner_join(bi_freqs_all_w, by="bigram") %>%
inner_join(bi_freqs_author_w, by="autor") %>%
# freqs of bigram used by "others", total sum of bigrams
mutate(notthem = totals - n, sum = sum(n)) %>%
# total freqs of all bigrams in "other" authors
mutate(notthem_a = sum - total_author) %>%
mutate(l1them = (n + totals)/((sum + total_author) - (n + totals)), #probs of "success", bigram used by author (?)
l2notthem = (notthem+totals)/((sum+notthem_a)-(notthem+totals)), #probs of "failure", bigram used by others (?)
sigmasqrd = 1/(n+totals)+1/(notthem+totals)) %>% # squared sigma (?? is this the prior adjusting ??)
mutate(sqrt = sqrt(sigmasqrd)) %>% # just sigma lol
mutate(logodds = (log(l1them)-log(l2notthem))/sqrt) # weigthed log odds
glimpse(freqs_all_w)
freqs_all_w %>%
arrange(desc(logodds)) %>%
filter(autor == "1815_1822") %>%
select(bigram, logodds) %>%
head(n = 20)
write.csv(corpus, "corp_for_logodds.csv")
glimpse(elegies)
############################
############################
write.csv(elegies_core, "elegies_core.csv")
elegies[1,6]
View(elegies)
#################
glimpse(elegies)
elegies[10,6]
View(elegies)
#################
glimpse(elegies_core)
elegies_core[10,6]
# loop for counting
x = NULL
for (i in 1:length(filelist))
{
len = length(readLines(filelist[i]))
x = c(x, len)
}
getwd()
install.packages("R.utils")
library(R.utils)
?countLines
elegies_core[10,6]
countLines(elegies_core[10,6])
setwd("~/Documents/fee/elegies_corpus/corpus_in_progress/")
filelis = list.files(pattern = ".*.txt")
# reorder the filelist
filelis <- mixedsort(filelis)
filelis
# loop for counting
x = NULL
for (i in 1:length(filelist)){
len = length(readLines(filelist[i]))
x = c(x, len)
}
for (i in 1:length(filelis)){
len = length(readLines(filelist[i]))
x = c(x, len)
}
filelis = list.files(pattern = ".*.txt")
# reorder the filelist
filelis <- mixedsort(filelis)
filelis
# loop for counting
x = NULL
for (i in 1:length(filelis)){
len = length(readLines(filelis[i]))
x = c(x, len)
}
x
readLines(elegies_core[10,6])
elegies_core[10,6]
str_split(elegies_core[10,6], pattern = "\\r\\n")
length(str_split(elegies_core[10,6], pattern = "\\r\\n"))
install.packages("stringi")
install.packages("stringi")
library(stringi)
length(unlist(str_split(elegies_core[10,6], pattern = "\\r\\n")))
stri_remove_empty(str_split(elegies_core[10,6], pattern = "\\r\\n"))
str_split(elegies_core[10,6], pattern = "\\r\\n")
stri_remove_empty(str_split(elegies_core[10,6], pattern = "\\r\\n"))
stri_remove_empty_na(str_split(elegies_core[10,6], pattern = "\\r\\n"))
temp = str_split(elegies_core[10,6], pattern = "\\r\\n")
length(temp)
unlist(str_split(elegies_core[10,6], pattern = "\\r\\n"))
stri_remove_empty(unlist(str_split(elegies_core[10,6], pattern = "\\r\\n")))
length(stri_remove_empty(unlist(str_split(elegies_core[10,6], pattern = "\\r\\n"))))
elegies_core %>%
mutate(lines = length(stri_remove_empty(unlist(str_split(text, pattern = "\\r\\n"))))) -> test
glimpse(test)
View(test)
test$lines <- sapply(test$text, function(x) length(stri_remove_empty(unlist(str_split(x, pattern = "\\r\\n")))))
View(test)
test$lines <- sapply(test$text, function(x) length(stri_remove_empty(unlist(str_split(x, pattern = "\\n")))))
View(test)
elegies[10,3]
elegies[10,6]
elegies_core[10,6]
str_split(elegies_core[10,6], "\\n")
glimpse(test)
test[10,6]
test <- elegies_core
test %>%
mutate(text = str_replace_all(text, "\\r", "")) %>%
mutate(lines = "") -> test
test
test$lines <- sapply(test$text, function(x) length(stri_remove_empty(unlist(str_split(x, pattern = "\\n")))))
View(test)
for (i in 1:length(filelis)){
len = length(readLines(filelis[i]))
x = c(x, len)
}
x
write.csv(test, "elegies_wnumb-of-lines.csv")
boxplot(test$lines)
boxplot(test$lines, test$Year)
plot(test$Year, test$lines)
ggplot(data = test, aes(Year, Lines)) + geom_boxplot()
ggplot(data = test, aes(Year, lines)) + geom_boxplot()
ggplot(data = test, aes(as.factor(Year), lines)) + geom_boxplot()
glimpse(test)
test %>%
group_by(Year, id) %>%
count(id)
test %>%
group_by(Year, id) %>%
count()
test %>%
group_by(Year, id) %>%
count(Year)
test %>%
count(Year)
test %>%
count(Year) %>%
plot(Year, n)
test %>%
count(Year) %>%
plot(n)
test %>%
count(Year) %>%
barplot(n)
test %>%
count(Year) %>%
ggplot(aes(Year, n)) + geom_bar()
test %>%
count(Year) %>%
ggplot(aes()) + geom_bar()
test %>%
count(Year) %>%
ggplot(aes(Year)) + geom_bar()
ggplot(data = test, aes(Year)) + geom_bar()
